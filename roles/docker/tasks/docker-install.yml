---
- name: Install python-apt
  become: yes
  package:
    name=python-apt
    state=present

- name: Check if Docker is already installed
  shell: dpkg-query -W docker-ce
  ignore_errors: True
  register: docker_check

- name: Download docker install script
  get_url:
    url: https://get.docker.com
    dest: /tmp/docker-install.sh
    mode: "a+x"
  when: docker_check is failed

- name: Run install script
  shell: /bin/sh /tmp/docker-install.sh
  when: docker_check is failed

- name: Remove temporary file
  file:
    path: /tmp/docker-install.sh
    state: absent
  when: docker_check is failed
    
- name: Set Docker to auto-start
  service: name=docker enabled=true state=started

- name: Add docker_pi_group_users to the docker group
  become: yes
  user:
    name: "{{ item }}"
    groups: docker
  with_items:
    - pi

- name: Login to docker hub
  command: docker login --username="{{ docker_pi_hub_username }}" --password="{{ docker_pi_hub_password }}"
  become_user: "{{ docker_pi_user }}"
  when: docker_pi_hub_username != "" and docker_pi_hub_password != ""

- name: Force leave docker swarm
  shell: docker swarm leave -f
  ignore_errors: True

- name: Init docker swarm
  shell: docker swarm init
  when: docker_pi_swarm_role == "manager"

- name: Get docker swarm worker token
  shell: docker swarm join-token -q worker
  register: worker_token
  when: docker_pi_swarm_role == "manager"

- name: Join docker swarm
  shell: "docker swarm join --token {{ hostvars['manager']['worker_token']['stdout'] }} {{ hostvars['manager']['ansible_eth0']['ipv4']['address'] }}:2377"
  when: docker_pi_swarm_role == "worker"

